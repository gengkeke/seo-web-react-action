{"version":3,"sources":["assets/images/logo.svg","constant/index.js","api/ajax.js","api/index.js","utils/storageUtils.js","actions/index.js","pages/login/login.jsx","pages/login/logout.jsx","pages/login/register.jsx","components/link-button/index.jsx","config/menuConfig.js","components/header/index.jsx","components/left-nav/index.jsx","pages/site/save-form.jsx","pages/site/update-form.jsx","pages/alarm/alarm.jsx","pages/home/line.jsx","pages/home/donut.jsx","pages/home/basiccolumn.jsx","pages/home/home.jsx","pages/integral/update-form.jsx","pages/integral/recharge-form.jsx","pages/integral/freeze-form.jsx","pages/integral/integral.jsx","pages/keyword/market-save-form.jsx","pages/keyword/market-update-form.jsx","pages/keyword/market.jsx","pages/keyword/rank.jsx","pages/keyword/user-save-form.jsx","pages/keyword/user-update-form.jsx","pages/keyword/user.jsx","pages/log/log.jsx","pages/permission/permission.jsx","pages/record/consume.jsx","pages/record/recharge.jsx","pages/site/site.jsx","pages/user/update-form.jsx","pages/user/user.jsx","pages/role/role.jsx","pages/404/404.jsx","pages/admin/admin.jsx","App.js","reducer/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","RECEIVE_USER","RESET_USER","REGISTER_USER","RESET_REGISTER_USER","axios","defaults","withCredentials","ajax","url","data","arguments","length","undefined","method","history","createHashHistory","Promise","resolve","reject","get","params","post","then","response","_response$data","code","msg","notification","message","description","push","catch","error","reqLogin","username","password","reqRegister","loginName","realName","mobilePhone","email","companyName","reqUsers","pageNum","pageSize","userName","reqRoles","reqUpdateUser","user","reqDeleteUser","id","reqIntegrals","reqRechargeIntegral","integral","reqFreezeIntegral","reqUpdateIntegral","reqKeywords","keywordName","reqSaveKeyword","keyword","reqUpdateKeyword","reqDeleteKeyword","reqUserKeywordsList","reqUserKeywords","reqKeywordsRank","reqSites","siteName","reqSitesList","reqSaveSite","site","reqUpdateSite","reqDeleteSite","reqConsumeRecords","reqRechargeRecords","storageUtils","store","set","remove","receiveUser","type","registerUser","logout","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","wrap","_context2","prev","next","sent","stop","_x2","apply","this","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","err","values","console","log","login","registerJump","validatorPassword","rule","value","callback","test","resetRegister","name","react_default","createElement","react_router","to","getFieldDecorator","className","href","src","logo","alt","es_form","onSubmit","Item","rules","request","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","es_checkbox","es_button","onClick","htmlType","size","Component","WrappedNormalLoginForm","create","connect","state","_ref","_callee","result","_context","_x","_ref4","_callee4","_context4","_x4","Logout","Register","register","loginJump","compareToFirstPassword","getFieldValue","Password","required","_ref3","_callee3","_context3","_x3","LinkButton","assign","menuList","title","key","children","Header","modal","confirm","okText","cancelText","onOk","getBreadcrumbNodes","path","location","pathname","map","item","breadcrumb","principal","breadcrumbNodes","react_router_dom","withRouter","SubMenu","LeftNav","getMenuNodes","find","cItem","indexOf","openKey","menu","menuNodes","selectKey","selectedKeys","defaultOpenKeys","mode","theme","SaveForm","setForm","labelCol","xs","span","sm","wrapperCol","label","initialValue","save_form","UpdateForm","update_form_Item","pr","domain","backgroundAddress","update_form","Alarm","loading","sites","total","showStatus","initColumns","columns","dataIndex","render","showUpdateModal","deleteSite","getSites","_result$data","list","setState","showSaveModal","handleCancel","updateForm","resetFields","saveForm","saveSite","updateSite","_x5","_this2","_this$state","padding","layout","onChange","target","table","rowKey","dataSource","pagination","defaultCurrent","current","defaultPageSize","visible","onCancel","Line","xTitle","autoRotate","Boolean","offset","textStyle","fontSize","textAlign","fill","rotate","position","yTitle","tickLine","lineWidth","stroke","BizCharts","height","date","scale","alias","forceFit","line","shape","React","Donut","DataView","DataSet","Html","Guide","dv","source","count","transform","field","dimension","as","percent","formatter","val","radius","innerRadius","showTitle","itemTpl","html","alignX","alignY","tooltip","content","point","Basiccolumn","year","sales","tickInterval","crosshairs","RMBSvg","width","viewBox","d","p-id","Home","backgroundColor","row","gutter","col","card","bordered","headStyle","borderBottom","bodyStyle","extra","placement","statistic","component","divider","margin","display","valueStyle","marginLeft","marginTop","line_Line","donut_Donut","basiccolumn_Basiccolumn","integral_update_form_Item","disabled","rebateScale","input_number","concat","parser","replace","precision","integral_update_form","RechargeForm","recharge_form_Item","recharge_form","FreezeForm","freeze_form_Item","availableIntegral","freeze_form","Integral","integrals","showRechargeModal","showFreezeModal","getIntegrals","rechargeForm","freezeForm","rechargeIntegral","rechargeValue","freezeIntegral","freezeValue","updateIntegral","_x6","_x7","MarketSaveForm","market_save_form_Item","market_save_form","market_update_form_Item","proposedPrice","market_update_form","Market","keywords","delete","getKeywords","save","update","Rank","getkeywords","Option","UserKeywordSaveForm","getKeywordsList","getSitesList","keywordOptions","siteOptions","user_save_form_Item","es_select","showSearch","optionFilterProp","filterOption","option","toLowerCase","user_save_form","user_update_form_Item","user_update_form","User","userKeywords","deleteKeyword","getUserKeywords","saveKeyword","updateKeyword","Log","Permission","Consume","rechargeRecords","getRechargeRecords","Recharge","Site","pages_user_update_form_Item","pages_user_update_form","users","deleteUser","getUsers","updateUser","Role","roles","getRoles","hideOnSinglePage","NotFound","goHome","Footer","Sider","Content","Admin","minHeight","boxShadow","components_left_nav","components_header","from","exact","KeywordMarket","KeywordRank","KeywordUser","RecordRecharge","RecordConsume","App","initUser","combineReducers","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.20d01f2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f3103225.svg\";","export const RECEIVE_USER = 'receive_user'//接收新的用户\nexport const RESET_USER = 'reset_user'//重置用户\nexport const REGISTER_USER = 'register_user'//注册用户\nexport const RESET_REGISTER_USER = 'reset_register_user'//重置用户\n","import axios from 'axios';\nimport {notification} from 'antd';\nimport {createHashHistory} from 'history';\n\n\naxios.defaults.withCredentials = true;\n\nexport default function (url, data = {}, method = 'GET') {\n    const history = createHashHistory();\n    return new Promise(function (resolve, reject) {\n        let promise;\n        // 执行异步 ajax 请求\n        if (method === 'GET') {\n            promise = axios.get(url, {params: data, withCredentials: true}); // params 配置指定的是 query 参数\n        } else {\n            promise = axios.post(url, data, {withCredentials: true});\n        }\n        promise.then(response => {\n            const {code, msg} = response.data;\n            if (code === 201) {\n                notification['error']({\n                    message: code,\n                    description: msg,\n                });\n                history.push('/logout');\n            } else if (code !== 0) {\n                notification['error']({\n                    message: code,\n                    description: msg,\n                });\n            }\n            resolve(response.data);// 如果成功了, 调用 resolve(response.data)\n        }).catch(error => { // 对所有 ajax 请求出错做统一处理, 外层就不用再处理错误了\n            notification['error']({\n                message: 'ERROR',\n                description: error.message,\n            });\n        })\n    })\n}\n\n\n","/*\n包含 n 个接口请求函数的模块\n每个函数返回 promise\n*/\nimport ajax from './ajax';\n// 登陆\nexport const reqLogin = (username, password) => ajax('/auth/login', {username, password}, 'POST');\n//注销\nexport const reqLogout = () => ajax('/auth/logout');\n\n// 注册\nexport const reqRegister = (loginName, password, realName, mobilePhone, email, companyName) => {\n    return ajax('/register', {loginName, password, realName, mobilePhone, email, companyName}, 'POST')\n};\n\n// 用户查询\nexport const reqUsers = (pageNum, pageSize, userName) => ajax('/users/pageQuery', {pageNum, pageSize, userName});\n\n// 用户查询\nexport const reqRoles = () => ajax('/roles/pageQuery');\n\n\n// 用户新增\nexport const reqSaveUser = (user) => ajax('/users/save', user, 'POST');\n\n\n// 用户修改\nexport const reqUpdateUser = (user) => ajax('/users/update', user, 'POST');\n\n\n// 用户删除\nexport const reqDeleteUser = (id) => ajax('/users/delete', {id}, 'POST');\n\n\n// 积分查询\nexport const reqIntegrals = (pageNum, pageSize, loginName) => ajax('/integrals/pageQuery', {\n    pageNum,\n    pageSize,\n    loginName\n});\n// 积分充值\nexport const reqRechargeIntegral = (integral) => ajax('/integrals/recharge', integral, 'POST');\n// 积分冻结\nexport const reqFreezeIntegral = (integral) => ajax('/integrals/freeze', integral, 'POST');\n// 积分修改\nexport const reqUpdateIntegral = (integral) => ajax('/integrals/update', integral, 'POST');\n\n// 关键词市场查询\nexport const reqKeywords = (pageNum, pageSize, keywordName) => ajax('/keywords/pageQuery', {\n    pageNum,\n    pageSize,\n    keywordName\n});\n\n// 关键词市场新增\nexport const reqSaveKeyword = (keyword) => ajax('/keywords/save', keyword, 'POST');\n\n// 关键词市场修改\nexport const reqUpdateKeyword = (keyword) => ajax('/keywords/update', keyword, 'POST');\n\n// 关键词市场删除\nexport const reqDeleteKeyword = (id) => ajax('/keywords/delete', {id}, 'POST');\n//关键词下拉\nexport const reqUserKeywordsList = () => ajax('/keywords/list');\n\n// 用户关键词查询\nexport const reqUserKeywords = (pageNum, pageSize, keywordName) => ajax('/keywords/user/pageQuery', {\n    pageNum,\n    pageSize,\n    keywordName\n});\n\n// 关键词排名查询\nexport const reqKeywordsRank = (pageNum, pageSize, keywordName) => ajax('/keywords/rank/pageQuery', {\n    pageNum,\n    pageSize,\n    keywordName\n});\n\n// 站点查询\nexport const reqSites = (pageNum, pageSize, siteName) => ajax('/sites/pageQuery', {pageNum, pageSize, siteName});\n// 站点查询\nexport const reqSitesList = () => ajax('/sites/list');\n// 站点新增\nexport const reqSaveSite = (site) => ajax('/sites/save', site, 'POST');\n\n// 站点修改\nexport const reqUpdateSite = (site) => ajax('/sites/update', site, 'POST');\n\n// 站点删除\nexport const reqDeleteSite = (id) => ajax('/sites/delete', {id}, 'POST');\n\n//消费积分记录\nexport const reqConsumeRecords = (pageNum, pageSize, keywordName) => ajax('/consumeRecord/pageQuery', {\n    pageNum,\n    pageSize,\n    keywordName\n});\n\n//用户充值记录\nexport const reqRechargeRecords = (pageNum, pageSize, loginName) => ajax('/rechargeRecord/pageQuery', {\n    pageNum,\n    pageSize,\n    loginName\n});\n\n\n\n\n","import store from 'store';\n\nconst USER_KEY = 'user_key';\n/*\n包含 n 个操作 local storage 的工具函数的模块\n*/\nexport default {\n    saveUser(user) {\n// localStroage 只能保存 string, 如果传递是对象, 会自动调用对象的 toString()并保存\n//localStorage.setItem(USER_KEY, JSON.stringify(user)) // 保存的必须是对象的 json 串\n        store.set(USER_KEY, user) // 内部会自动转换成 json 再保存\n    },\n    getUser() { // 如果存在, 需要返回的是对象, 如果没有值, 返回{}\n// return JSON.parse(localStorage.getItem(USER_KEY) || '{}') // [object, Object]\n        return store.get(USER_KEY) || {}\n    },\n    removeUser() {\n// localStorage.removeItem(USER_KEY)\n        store.remove(USER_KEY)\n    }\n}\n","import {RECEIVE_USER, RESET_USER, REGISTER_USER,RESET_REGISTER_USER} from '../constant'\nimport {reqLogin, reqLogout, reqRegister} from '../api'\nimport storageUtils from \"../utils/storageUtils\";\nimport {notification} from \"antd\";\n\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\n\nexport const registerUser = (user) => ({type: REGISTER_USER, user})\n/*\n登陆的异步 action\n*/\nexport const login = (username, password) => {\n    return async dispatch => {\n        const result = await reqLogin(username, password)\n        if (result.code === 0) {\n            const user = result.data\n            storageUtils.saveUser(user)\n            dispatch(receiveUser(user))\n        }\n    }\n}\n\n/*\n退出登陆的同步 action\n*/\nexport const logout = () => {\n    return async dispatch => {\n        const result = await reqLogout()\n        if (result.code === 0) {\n            storageUtils.removeUser()\n            dispatch({type: RESET_USER})\n        }\n    }\n}\n\n/*\n注册\n*/\nexport const register = (user) => {\n    return async dispatch => {\n        const {loginName, password, realName, mobilePhone, email, companyName} = user\n        const result = await reqRegister(loginName, password, realName, mobilePhone, email, companyName)\n        if (result.code === 0) {\n            notification['success']({\n                message: '注册成功',\n            });\n            dispatch(registerUser(user))\n        }\n    }\n}\n\n/*\n注册\n*/\nexport const resetRegister = () => {\n    return async dispatch => {\n        dispatch({type: RESET_REGISTER_USER})\n    }\n}\n\n","/*\n用户登陆的路由组件\n*/\nimport React, {Component} from 'react';\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\nimport {Redirect} from 'react-router-dom';\nimport './login.less';\nimport logo from '../../assets/images/logo.svg';\nimport {connect} from \"react-redux\";\nimport {login, resetRegister} from '../../actions';\n\nclass Login extends Component {\n    handleSubmit = (event) => {\n        //阻止事件的默认行为\n        event.preventDefault();\n        //得到form对象\n        const form = this.props.form;\n        form.validateFields((err, values) => {\n            if (!err) {\n                const {username, password} = values;\n                this.props.login(username, password);\n            } else {\n                console.log('校验失败', values);\n            }\n        });\n    };\n    registerJump = () => {\n        //event.preventDefault();\n        this.props.history.push('/register')\n    };\n\n    //对密码进行自定义验证\n    validatorPassword = (rule, value, callback) => {\n        const length = value && value.length;\n        const pwdReg = /^[a-zA-Z0-9_]+$/;\n        if (!value) { // callback 如果不传参代表校验成功，如果传参代表校验失败，并且会提示错误\n            callback('密码必须输入')\n        } else if (length < 6) {\n            callback('密码至少6位')\n        } else if (length > 12) {\n            callback('密码最多12位')\n        } else if (!pwdReg.test(value)) {\n            callback('密码必须是英文、数组或下划线组成')\n        } else {\n            callback();//验证通过 必须调用 callback\n        }\n    }\n\n    render() {\n        this.props.resetRegister();\n        // 如果用户已经登陆, 自动跳转到 admin\n        const user = this.props.user;\n        if (user && user.name) {\n            return <Redirect to='/'/>\n        }\n        //得到具有强大功能的form对象\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n\n        return (\n            <div id=\"login\">\n                <header>\n                    <div className=\"logo\">\n                        <a href='/'>\n                            <img src={logo} alt=\"logo\"/>\n                            <span>快排系统</span>\n                        </a>\n                    </div>\n                    <div className=\"desc\">以客户为中心，以结果和效率为导向，致力于服务企业</div>\n                </header>\n                <section>\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator(\"username\", {//配置对象：属性名是特定的一些名称\n                                //声明式验证：直接使用别人定义好的验证规则\n                                rules: [\n                                    {request: true, whitespace: true, message: \"用户名必须输入\"},\n                                    {min: 4, message: \"用户名至少4位\"},\n                                    {max: 20, message: \"用户名最多20位\"},\n                                    {pattern: /^[a-zA-Z0-9_]+$/, message: \"用户名必须是英文、数字或者下划线组成\"},\n                                ]\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"用户名admin\"\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator(\"password\", {\n                                rules: [\n                                    {\n                                        validator: this.validatorPassword\n                                    }\n                                ]\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"密码123456\"\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <Checkbox>自动登录</Checkbox>\n                            <Button type=\"link\" className=\"login-form-forgot\" onClick={this.test}>忘记密码</Button>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n                                    size=\"large\">确定</Button>\n                            <Button type=\"link\" onClick={this.registerJump}>注册账户</Button>\n                        </Form.Item>\n                    </Form>\n                </section>\n                <footer>\n                    <div className=\"links\">\n                        <a>帮助</a>\n                        <a>隐私</a>\n                        <a>条款</a>\n                    </div>\n                    <div className=\"copyright\">\n                        Copyright © 2019 上海皓逗网络科技有限公司出品\n                    </div>\n                </footer>\n            </div>\n        )\n    }\n}\n\n/*\n1. 高阶函数\n    1). 一类特别的函数\n        a. 接受函数类型的参数\n        b. 返回值是函数\n    2). 常见\n        a. 定时器: setTimeout()/setInterval()\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\n        d. 函数对象的bind()\n        e. Form.create()() / getFieldDecorator()()\n    3). 高阶函数更新动态, 更加具有扩展性\n\n2. 高阶组件\n    1). 本质就是一个函数\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\n    3). 作用: 扩展组件的功能\n\n3. 高阶组件与高阶函数的关系\n    高阶组件是特别的高阶函数\n    接收一个组件函数, 返回是一个新的组件函数\n*/\n/*\n包装Form组件生成一个新的组件Form(Login)\n新组件会向Form组件传递一个强大的对象属性：form\n*/\nconst WrappedNormalLoginForm = Form.create()(Login);\nexport default connect(\n    state => ({user: state.user}),\n    {login, resetRegister}\n)(WrappedNormalLoginForm);\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './login.less';\nimport {connect} from \"react-redux\";\nimport {logout} from '../../actions';\n\nclass Logout extends Component {\n    render() {\n        this.props.logout();\n        return <Redirect to='/login'/>;\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {logout}\n)(Logout);\n","import React, {Component} from 'react';\nimport {Form, Icon, Input, Button, notification} from 'antd';\nimport './login.less';\nimport logo from '../../assets/images/logo.svg';\nimport {connect} from \"react-redux\";\nimport {register} from '../../actions';\nimport {Redirect} from 'react-router-dom';\n\nclass Register extends Component {\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const form = this.props.form;\n        form.validateFields((err, values) => {\n            if (!err) {\n                this.props.register(values);\n            } else {\n                console.log('校验失败', values);\n            }\n        });\n    };\n\n    loginJump = () => {\n        this.props.history.push('/login')\n    };\n\n    validatorPassword = (rule, value, callback) => {\n        const length = value && value.length;\n        const pwdReg = /^[a-zA-Z0-9_]+$/;\n        if (!value) {\n            callback('密码必须输入')\n        } else if (length < 6) {\n            callback('密码至少6位')\n        } else if (length > 20) {\n            callback('密码最多20位')\n        } else if (!pwdReg.test(value)) {\n            callback('密码必须是英文、数组或下划线组成')\n        } else {\n            callback();\n        }\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('您输入的两个密码不一致!');\n        } else {\n            callback();\n        }\n    };\n\n    render() {\n\n        const registerUser = this.props.registerUser\n        if (registerUser && registerUser.loginName) {\n            return <Redirect to='/login'/>\n        }\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div id=\"register\">\n                <header>\n                    <div className=\"logo\">\n                        <a href='/'>\n                            <img src={logo} alt=\"logo\"/>\n                            <span>快排系统</span>\n                        </a>\n                    </div>\n                    <div className=\"desc\">以客户为中心，以结果和效率为导向，致力于服务企业</div>\n                </header>\n                <section>\n                    <h2>注册</h2>\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator(\"loginName\", {\n                                rules: [\n                                    {request: true, whitespace: true, message: \"用户名必须输入\"},\n                                    {min: 4, message: \"用户名至少4位\"},\n                                    {max: 20, message: \"用户名最多20位\"},\n                                    {pattern: /^[a-zA-Z0-9_]+$/, message: \"用户名必须是英文、数字或者下划线组成\"},\n                                ]\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user-add\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"用户名\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"realName\", {})(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"姓名\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"password\", {\n                                rules: [\n                                    {\n                                        validator: this.validatorPassword\n                                    }\n                                ]\n                            })(\n                                <Input.Password\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"至少6位密码,区分大小写\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"password2\", {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请确认密码',\n                                    },\n                                    {\n                                        validator: this.compareToFirstPassword,\n                                    }\n                                ]\n                            })(\n                                <Input.Password\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"确认密码\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"mobilePhone\", {\n                                rules: [\n                                    {required: true, message: '请输入手机号!'}\n                                ]\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"mobile\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"手机号\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"email\", {\n                                rules: [\n                                    {\n                                        type: 'email',\n                                        message: '邮箱格式不合法!',\n                                    },\n                                ]\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"邮箱\"\n                                />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator(\"companyName\", {})(\n                                <Input\n                                    prefix={<Icon type=\"home\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"公司名\"\n                                />\n                            )}\n                        </Form.Item>\n\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\"\n                                    size=\"large\">注册</Button>\n                            <Button type=\"link\" className=\"register-to-login\" onClick={this.loginJump}>使用已有账户登录</Button>\n                        </Form.Item>\n                    </Form>\n                </section>\n                <footer>\n                    <div className=\"links\">\n                        <a>帮助</a>\n                        <a>隐私</a>\n                        <a>条款</a>\n                    </div>\n                    <div className=\"copyright\">\n                        Copyright © 2019 上海皓逗网络科技有限公司出品\n                    </div>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({registerUser: state.registerUser}),\n    {register})(Form.create()(Register))\n\n","import React from 'react';\nimport './index.less';\n\nexport default function LinkButton(props) {\n    return <button {...props} className=\"link-button\"/>\n}\n","const menuList = [\n    {\n        title: ' 概览', // 菜单标题名称\n        key: '/home', // 对应的 path\n        icon: 'home', // 图标名称\n    },\n    {\n        title: ' 用户管理',\n        key: '/user',\n        icon: 'user'\n    },\n    {\n        title: ' 角色管理',\n        key: '/role',\n        icon: 'home'\n    },\n    {\n        title: ' 权限管理',\n        key: '/permission',\n        icon: 'home'\n    },\n    {\n        title: ' 积分管理',\n        key: '/integral',\n        icon: 'home'\n    },\n    {\n        title: ' 关键词管理',\n        key: '/keyword',\n        icon: 'appstore',\n        children: [ // 子菜单列表\n            {\n                title: ' 关键词市场',\n                key: '/keyword/market',\n                icon: 'bars'\n            },\n            {\n                title: ' 用户关键词',\n                key: '/keyword/user',\n                icon: 'tool'\n            },\n            {\n                title: ' 关键词排名',\n                key: '/keyword/rank',\n                icon: 'tool'\n            }\n        ]\n    },\n    {\n        title: ' 站点管理',\n        key: '/site',\n        icon: 'safety',\n    },\n    {\n        title: ' 用户记录',\n        key: '/record',\n        icon: 'area-chart',\n        children: [\n            {\n                title: ' 消费记录',\n                key: '/record/consume',\n                icon: 'bar-chart'\n            },\n            {\n                title: ' 充值记录',\n                key: '/record/recharge',\n                icon: 'line-chart'\n            }\n        ]\n    },\n    {\n        title: ' 告警管理',\n        key: '/alarm',\n        icon: 'pie-chart'\n    },\n    {\n        title: ' 日志管理',\n        key: '/log',\n        icon: 'pie-chart'\n    }\n];\nexport default menuList;","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport './index.less';\nimport LinkButton from \"../link-button\"\nimport {Modal, Breadcrumb} from 'antd';\nimport menuList from \"../../config/menuConfig\";\nimport {connect} from \"react-redux\";\nimport {logout} from '../../actions';\n\n/*\n头部组件\n*/\nclass Header extends Component {\n    logout = () => {\n        Modal.confirm({\n            title: '确认退出?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                this.props.logout()\n            },\n        });\n    };\n    getBreadcrumbNodes = (menuList) => {\n        const path = this.props.location.pathname;\n        return menuList.map(item => {\n            if (item.key === path) {\n                this.title = item.title;\n                return (<Breadcrumb.Item key={item.key}>{item.title}</Breadcrumb.Item>)\n            } else if (item.children) {\n                return this.getBreadcrumbNodes(item.children);\n            }\n            return (<Breadcrumb.Item key='0'></Breadcrumb.Item>);\n        })\n    };\n\n    render() {\n        const {realName} =this.props.user.principal;\n        const breadcrumbNodes = this.getBreadcrumbNodes(menuList);\n        return (\n            <div className='header'>\n                <div className='header-top'>\n                    <div className='header-top-right'>\n                    <span className='ant-avatar-image'>\n                        <img src=\"https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png\"\n                             alt='img'/>\n                    </span>\n                        <span>{realName}</span>\n                        <span><LinkButton onClick={this.logout}>退出</LinkButton></span>\n                    </div>\n                </div>\n                <div className='header-page'>\n                    <div className='header-page-breadcrumb'>\n                        <Breadcrumb>\n                            <Breadcrumb.Item>\n                                <Link to='/'>首页</Link>\n                            </Breadcrumb.Item>\n                            {breadcrumbNodes}\n                        </Breadcrumb>\n                    </div>\n                    <div className='header-page-heading'>\n                        <span>{this.title}</span>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n    }),\n    {logout}\n)(withRouter(Header));\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom'\nimport {Menu, Icon} from 'antd';\nimport menuList from '../../config/menuConfig';\n\nimport './index.less'\nimport logo from \"../../assets/images/logo.svg\";\n\nconst {SubMenu} = Menu;\n\n/*\n左侧导航组件\n*/\nclass LeftNav extends Component {\n    componentWillMount() {\n        this.menuNodes = this.getMenuNodes(menuList);\n    }\n\n\n    render() {\n        const selectKey = this.props.location.pathname;\n        const openKey = this.openKey;\n        return (\n            <div className=\"left-nav\">\n                <Link to=\"/\" className=\"left-nav-header\">\n                    <img src={logo} alt='logo'/>\n                    <h1>快排系统</h1>\n                </Link>\n                <Menu selectedKeys={[selectKey]}\n                      defaultOpenKeys={[openKey]}\n                      mode=\"inline\"\n                      theme=\"dark\">\n                    {/*\n                    <Menu.Item key=\"/home\">\n                        <Link to='/home'>\n                            <Icon type=\"pie-chart\"/>\n                            <span>首页</span>\n                        </Link>\n                    </Menu.Item>\n                    <SubMenu key=\"sub1\" title={\n                        <span>\n                            <Icon type=\"mail\"/>\n                            <span>Navigation One</span>\n                            </span>\n                    }>\n                        <Menu.Item key=\"5\">Option 5</Menu.Item>\n                    </SubMenu>\n                    */}\n                    {\n                        this.menuNodes\n                    }\n                </Menu>\n            </div>\n        )\n    }\n\n    /*根据数据数组生成标签数组**/\n    getMenuNodes = (menuList) => {\n        const path = this.props.location.pathname;\n        return menuList.map(item => {\n            if (!item.children) {\n                return (\n                    <Menu.Item key={item.key}>\n                        <Link to={item.key}>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>\n                )\n            } else {\n                // 如果当前请求路由与当前菜单的某个子菜单的 key 匹配 , 将菜单的 key 保存为 openKey\n                if (item.children.find(cItem => path.indexOf(cItem.key) === 0)) {\n                    this.openKey = item.key\n                }\n                return (\n                    <SubMenu key={item.key} title={\n                        <span>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </span>\n                    }>\n                        {this.getMenuNodes(item.children)}\n                    </SubMenu>\n                )\n            }\n        })\n    }\n\n}\n\nexport default withRouter(LeftNav);\n","import React, {Component} from 'react';\nimport {Form, Input} from 'antd';\nimport PropTypes from \"prop-types\";\n\nconst Item = Form.Item;\n\nclass SaveForm extends Component {\n    static propTypes = {\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        return (\n            <Form  {...formItemLayout} >\n                <Item label=\"站点名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"siteName\", {\n                            initialValue:'',\n                            rules: [\n                                {required: true, message: '站点名必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入站点名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"PR值\">\n                    {\n                        getFieldDecorator(\"pr\", {\n                            initialValue:'',\n                        })(\n                            <Input placeholder=\"请输入PR值\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"域名\">\n                    {\n                        getFieldDecorator(\"domain\", {\n                            initialValue:'',\n                        })(\n                            <Input placeholder=\"请输入域名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"后台地址\">\n                    {\n                        getFieldDecorator(\"backgroundAddress\", {\n                            initialValue:'',\n                        })(\n                            <Input placeholder=\"请输入后台地址\"/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SaveForm);\n","import React, {Component} from 'react';\nimport {Form, Input} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass UpdateForm extends Component {\n\n    static propTypes = {\n        site: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {site} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"站点名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"siteName\", {\n                            initialValue: site.siteName,\n                            rules: [\n                                {required: true, message: '站点名必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入站点名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"PR值\">\n                    {\n                        getFieldDecorator(\"pr\", {\n                            initialValue: site.pr\n                        })(\n                            <Input placeholder=\"请输入PR值\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"域名\">\n                    {\n                        getFieldDecorator(\"domain\", {\n                            initialValue: site.domain\n                        })(\n                            <Input placeholder=\"请输入域名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"后台地址\">\n                    {\n                        getFieldDecorator(\"backgroundAddress\", {\n                            initialValue: site.backgroundAddress\n                        })(\n                            <Input placeholder=\"请输入后台地址\"/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UpdateForm);\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqDeleteSite, reqSaveSite, reqSites, reqUpdateSite} from \"../../api\";\nimport SaveForm from \"../site/save-form\";\nimport UpdateForm from \"../site/update-form\";\n\nexport default class Alarm extends Component {\n\n    state = {\n        loading: false,\n        sites: [],\n        total: 0,\n        siteName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1显示新增 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '站点名',\n                dataIndex: 'siteName',\n            },\n            {\n                title: '站点标识',\n                dataIndex: 'siteMark',\n            },\n            {\n                title: 'PR值',\n                dataIndex: 'pr',\n            },\n            {\n                title: '域名',\n                dataIndex: 'domain',\n            },\n            {\n                title: '后台地址',\n                dataIndex: 'backgroundAddress',\n            },\n            {\n                title: '用户名称',\n                dataIndex: 'userId',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (site) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(site)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.deleteSite(site.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    deleteSite = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteSite(id);\n                this.getSites();\n            },\n        });\n    };\n    /*站点查询*/\n    getSites = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqSites(pageNum, this.state.pageSize, this.state.siteName);\n        const {list, total} = result.data;\n        this.setState({total, sites: list, loading: false});\n    };\n    /*显示添加框*/\n    showSaveModal = () => {\n        this.setState({\n            showStatus: 1\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (site) => {\n        this.site = site;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*添加站点*/\n    saveSite = () => {\n        /*表单验证*/\n        this.saveForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const result = await reqSaveSite(values);\n                this.saveForm.resetFields();/*清除输入数据*/\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '新增成功',\n                    });\n                    this.getSites();\n                }\n            }\n\n        });\n\n    };\n    /*更新站点*/\n    updateSite = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {siteName, pr, domain, backgroundAddress} = values;\n                if (siteName) {\n                    this.site.siteName = siteName;\n                }\n                if (pr) {\n                    this.site.pr = pr;\n                }\n                if (domain) {\n                    this.site.domain = domain;\n                }\n                if (backgroundAddress) {\n                    this.site.backgroundAddress = backgroundAddress;\n                }\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateSite(this.site);\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getSites();\n            }\n        });\n\n\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getSites(1);\n    }\n\n    render() {\n        const {sites, loading, total, showStatus, siteName, pageNum, pageSize} = this.state;\n        const site = this.site;\n        return (\n            <div  style={{padding:'20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='站点名称'>\n                            <Input value={siteName} onChange={event => this.setState({siteName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getSites(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'><Button type='primary' onClick={this.showSaveModal}>新增</Button></div>\n                <Table rowKey='id' dataSource={sites} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getSites(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"新增站点\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.saveSite}\n                    onCancel={this.handleCancel}>\n                    <SaveForm setForm={(form) => {\n                        this.saveForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改站点\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateSite}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm site={site} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}","import React from \"react\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n} from \"bizcharts\";\n\nexport default class Line extends React.Component {\n    render() {\n        const data = [\n            {\n                date: \" 2019-08-01\",\n                value: 84.0\n            },\n            {\n                date: \" 2019-08-02\",\n                value: 14.9\n            },\n            {\n                date: \" 2019-08-03\",\n                value: 17.0\n            },\n            {\n                date: \" 2019-08-04\",\n                value: 20.2\n            },\n            {\n                date: \" 2019-08-05\",\n                value: 55.6\n            },\n            {\n                date: \" 2019-08-06\",\n                value: 56.7\n            },\n            {\n                date: \" 2019-08-07\",\n                value: 30.6\n            },\n            {\n                date: \" 2019-08-08\",\n                value: 63.2\n            },\n            {\n                date: \" 2019-08-09\",\n                value: 24.6\n            },\n            {\n                date: \" 2019-08-10\",\n                value: 14.0\n            },\n            {\n                date: \" 2019-08-11\",\n                value: 9.4\n            },\n            {\n                date: \" 2019-08-12\",\n                value: 6.3\n            }\n        ];\n        const cols = {\n            date: {\n                alias: \"日期\"\n            },\n            value: {\n                alias: \"消费\"\n            }\n        };\n\n        const xTitle = {\n            autoRotate: {Boolean}, // 是否需要自动旋转，默认为 true\n            offset: 40, // 设置标题 title 距离坐标轴线的距离\n            textStyle: {\n                fontSize: '12',\n                textAlign: 'center',\n                fill: '#999',\n                rotate: 0\n            }, // 坐标轴文本属性配置\n            position: 'end' || 'center' || 'start' // 标题的位置，**新增**\n        };\n        const yTitle = {\n            autoRotate: {Boolean}, // 是否需要自动旋转，默认为 true\n            offset: 40, // 设置标题 title 距离坐标轴线的距离\n            textStyle: {\n                fontSize: '12',\n                textAlign: 'center',\n                fill: '#999',\n                rotate: 0\n            }, // 坐标轴文本属性配置\n            position: 'end' || 'center' || 'start', // 标题的位置，**新增**\n        };\n        //可配置样式\n        const tickLine = {\n            lineWidth: 1, // 刻度线宽\n            stroke: '#ccc', // 刻度线的颜色\n            length: 5, // 刻度线的长度, **原来的属性为 line**,可以通过将值设置为负数来改变其在轴上的方向\n        };\n        return (\n            <div>\n                <Chart height={400} padding={[25,15,50,60]}  data={data} scale={cols} forceFit>\n                    <Axis\n                        name=\"date\"\n                        title={xTitle}\n                        tickLine={tickLine}\n                        line={{\n                            stroke: \"#E6E6E6\"\n                        }}\n                    />\n                    <Axis\n                        name=\"value\"\n                        tickLine={tickLine}\n                        //grid={null}\n                        title={yTitle}\n                        line={{\n                            stroke: \"#E6E6E6\"\n                        }}\n                    />\n                    <Tooltip/>\n                    <Geom\n                        type=\"line\"\n                        position=\"date*value\"\n                        size={2}\n                        //color=\"l (270) 0:rgba(255, 146, 255, 1) .5:rgba(100, 268, 255, 1) 1:rgba(215, 0, 255, 1)\"\n                        shape=\"smooth\"\n                        /*style={{\n                            shadowColor: \"l (270) 0:rgba(21, 146, 255, 0)\",\n                            shadowBlur: 60,\n                            shadowOffsetY: 6\n                        }}*/\n                    />\n                    <Geom\n                        type=\"point\"\n                        position=\"date*value\"\n                        size={4}\n                        shape={\"circle\"}\n                        style={{\n                            stroke: \"#fff\",\n                            lineWidth: 1\n                        }}\n                    />\n                </Chart>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nexport default  class Donut extends React.Component {\n  render() {\n    const { DataView } = DataSet;\n    const { Html } = Guide;\n    const data = [\n      {\n        item: \"关键词一\",\n        count: 40\n      },\n      {\n        item: \"关键词二\",\n        count: 21\n      },\n      {\n        item: \"关键词三\",\n        count: 17\n      },\n      {\n        item: \"关键词四\",\n        count: 13\n      },\n      {\n        item: \"关键词五\",\n        count: 9\n      }\n    ];\n    const dv = new DataView();\n    dv.source(data).transform({\n      type: \"percent\",\n      field: \"count\",\n      dimension: \"item\",\n      as: \"percent\"\n    });\n    const cols = {\n      percent: {\n        formatter: val => {\n          val = val * 100 + \"%\";\n          return val;\n        }\n      }\n    };\n    return (\n      <div>\n        <Chart\n          height={400}\n          data={dv}\n          scale={cols}\n          padding={[20, 80, 20, 20]}\n          forceFit\n        >\n          <Coord type={\"theta\"} radius={0.75} innerRadius={0.75} />\n          <Axis name=\"percent\" />\n          <Legend\n            position=\"right\"\n            /*offsetY={-400 / 2 + 150}\n            offsetX={-100}*/\n          />\n          <Tooltip\n            showTitle={false}\n            itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n          />\n          <Guide>\n            <Html\n              position={[\"50%\", \"50%\"]}\n              html=\"<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 10em;&quot;>总消费<br><span style=&quot;color:#262626;font-size:2.5em&quot;>200,323</span></div>\"\n              alignX=\"middle\"\n              alignY=\"middle\"\n            />\n          </Guide>\n          <Geom\n            type=\"intervalStack\"\n            position=\"percent\"\n            color=\"item\"\n            tooltip={[\n              \"item*percent\",\n              (item, percent) => {\n                percent = percent * 100 + \"%\";\n                return {\n                  name: item,\n                  value: percent\n                };\n              }\n            ]}\n            style={{\n              lineWidth:8,\n              stroke: \"#fff\"\n            }}\n          >\n            <Label\n              content=\"percent\"\n              formatter={(val, item) => {\n                return item.point.item + \": \" + val;\n              }}\n            />\n          </Geom>\n        </Chart>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util\n} from \"bizcharts\";\n\nexport default class Basiccolumn extends React.Component {\n  render() {\n    const data = [\n      {\n        year: \"1951 年\",\n        sales: 38\n      },\n      {\n        year: \"1952 年\",\n        sales: 52\n      },\n      {\n        year: \"1956 年\",\n        sales: 61\n      },\n      {\n        year: \"1957 年\",\n        sales: 145\n      },\n      {\n        year: \"1958 年\",\n        sales: 48\n      },\n      {\n        year: \"1959 年\",\n        sales: 38\n      },\n      {\n        year: \"1960 年\",\n        sales: 38\n      },\n      {\n        year: \"1962 年\",\n        sales: 38\n      }\n    ];\n    const cols = {\n      sales: {\n        tickInterval: 20\n      }\n    };\n    return (\n      <div>\n        <Chart height={400} padding={[30]} data={data} scale={cols} forceFit>\n          <Axis name=\"year\" />\n          <Axis name=\"sales\" />\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom type=\"interval\" position=\"year*sales\" />\n        </Chart>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Line from './line';\nimport Donut from './donut';\nimport Basiccolumn from './basiccolumn';\nimport {Divider, Statistic, Card, Col, Row, Icon, Tooltip} from 'antd';\nimport './home.less'\n\nconst RMBSvg = () => (\n    <svg width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 1024 1024\">\n        <path\n            d=\"M787.669861 62.749836h-65.742653l-210.480106 375.237589L298.62537 62.749836h-65.917737L454.915321 454.536484H224.561601v49.146496h253.973731v149.487257H224.561601v49.146496h253.973731v257.529684h66.552546V702.316733h257.045387v-49.146496H545.087878v-149.487257h257.045387v-49.146496H567.906187z\"\n            fill=\"\" p-id=\"1113\"></path>\n    </svg>\n);\nexport default class Home extends Component {\n\n    render() {\n\n\n        return (\n            <div style={{backgroundColor: '#f0f2f5', height: '100%'}}>\n                <Row gutter={16}>\n                    <Col span={6}>\n                        <Card bordered={false} style={{padding: '20px 24px 8px'}} title='可用积分'\n                              headStyle={{\n                                  borderBottom: '0',\n                                  fontSize: '14px',\n                                  color: 'rgba(0, 0, 0, 0.45)',\n                                  padding: '0 24px'\n                              }}\n                              bodyStyle={{padding: '0 24px 15px'}}\n                              extra={<Tooltip placement=\"top\" title={'可用积分'}><Icon\n                                  type=\"exclamation-circle\"/></Tooltip>}>\n                            <Statistic value={112893} prefix={<Icon component={RMBSvg}/>}/>\n                            <Divider style={{margin: '12px 0'}}/>\n                            <span>日消费积分</span>\n                            <Statistic style={{display: 'inline-block'}}\n                                       valueStyle={{fontSize: '14px', marginLeft: '10px'}}\n                                       value={12452} prefix={<Icon component={RMBSvg}/>}/>\n                        </Card>\n                    </Col>\n                    <Col span={6}>\n                        <Card bordered={false} style={{padding: '20px 24px 8px'}} title='项目数'\n                              headStyle={{\n                                  borderBottom: '0',\n                                  fontSize: '14px',\n                                  color: 'rgba(0, 0, 0, 0.45)',\n                                  padding: '0 24px'\n                              }}\n                              bodyStyle={{padding: '0 24px 15px'}}\n                              extra={<Tooltip placement=\"top\" title={'项目数'}><Icon\n                                  type=\"exclamation-circle\"/></Tooltip>}>\n                            <Statistic value={323}/>\n                            <Divider style={{margin: '12px 0'}}/>\n                            <span>项目数</span>\n                            <Statistic style={{display: 'inline-block'}}\n                                       valueStyle={{fontSize: '14px', marginLeft: '10px'}}\n                                       value={2}/>\n                        </Card>\n                    </Col>\n                    <Col span={6}>\n                        <Card bordered={false} style={{padding: '20px 24px 8px'}} title='关键词数'\n                              headStyle={{\n                                  borderBottom: '0',\n                                  fontSize: '14px',\n                                  color: 'rgba(0, 0, 0, 0.45)',\n                                  padding: '0 24px'\n                              }}\n                              bodyStyle={{padding: '0 24px 15px'}}\n                              extra={<Tooltip placement=\"top\" title={'关键词数'}><Icon\n                                  type=\"exclamation-circle\"/></Tooltip>}>\n                            <Statistic value={100}/>\n                            <Divider style={{margin: '12px 0'}}/>\n                            <span>关键词数</span>\n                            <Statistic style={{display: 'inline-block'}}\n                                       valueStyle={{fontSize: '14px', marginLeft: '10px'}}\n                                       value={12}/>\n                        </Card>\n                    </Col>\n                    <Col span={6}>\n                        <Card bordered={false} style={{padding: '20px 24px 8px'}} title='访问量'\n                              headStyle={{\n                                  borderBottom: '0',\n                                  fontSize: '14px',\n                                  color: 'rgba(0, 0, 0, 0.45)',\n                                  padding: '0 24px'\n                              }}\n                              bodyStyle={{padding: '0 24px 15px'}}\n                              extra={<Tooltip placement=\"top\" title={'访问量'}><Icon\n                                  type=\"exclamation-circle\"/></Tooltip>}>\n                            <Statistic value={121512}/>\n                            <Divider style={{margin: '12px 0'}}/>\n                            <span>日访问量</span>\n                            <Statistic style={{display: 'inline-block'}}\n                                       valueStyle={{fontSize: '14px', marginLeft: '10px'}}\n                                       value={1245}/>\n                        </Card>\n                    </Col>\n                </Row>\n                <Card title=\"近期消费趋势\" bordered={false} style={{marginTop: '24px'}}>\n                    <Line/>\n                </Card>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Card title=\"关键词消费占比TOP10\" bordered={false} style={{marginTop: '24px'}}>\n                            <Donut/>\n                        </Card>\n                    </Col>\n                    <Col span={12}>\n                        <Card title=\"访问量趋势\" bordered={false} style={{marginTop: '24px'}}>\n                            <Basiccolumn/>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Form, Input, InputNumber} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass UpdateForm extends Component {\n\n    static propTypes = {\n        integral: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {integral} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"用户名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"loginName\", {\n                            initialValue: integral.loginName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"姓名\">\n                    {\n                        getFieldDecorator(\"realName\", {\n                            initialValue: integral.realName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"折扣比例\">\n                    {\n                        getFieldDecorator(\"rebateScale\", {\n\n                            initialValue: integral.rebateScale\n                        })(\n                            <InputNumber placeholder=\"请输入折扣比例\"\n                                         formatter={value => `${value}%`}\n                                         parser={value => value.replace('%', '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UpdateForm);\n","import React, {Component} from 'react';\nimport {Form, Input, InputNumber} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass RechargeForm extends Component {\n\n    static propTypes = {\n        integral: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {integral} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"用户名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"loginName\", {\n                            initialValue: integral.loginName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"姓名\">\n                    {\n                        getFieldDecorator(\"realName\", {\n                            initialValue: integral.realName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"折扣比例\">\n                    {\n                        getFieldDecorator(\"rebateScale\", {\n                            initialValue: integral.rebateScale\n                        })(\n                            <InputNumber disabled={true} formatter={value => `${value}%`}\n                                   parser={value => value.replace('%', '')}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"充值积分\" required=\"true\">\n                    {\n                        getFieldDecorator(\"rechargeValue\", {\n                            initialValue: 0,\n                            rules: [\n                                {required: true, message: '充值积分必须输入'}\n                            ]\n                        })(\n                            <InputNumber placeholder=\"请输入充值积分\"\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(RechargeForm);\n","import React, {Component} from 'react';\nimport {Form, Input, InputNumber} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass FreezeForm extends Component {\n\n    static propTypes = {\n        integral: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {integral} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"用户名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"loginName\", {\n                            initialValue: integral.loginName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"姓名\">\n                    {\n                        getFieldDecorator(\"realName\", {\n                            initialValue: integral.realName\n                        })(\n                            <Input disabled={true}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"可用积分\">\n                    {\n                        getFieldDecorator(\"availableIntegral\", {\n                            initialValue: integral.availableIntegral\n                        })(\n                            <InputNumber disabled={true}\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"冻结积分\" required=\"true\">\n                    {\n                        getFieldDecorator(\"freezeValue\", {\n                            initialValue: 0,\n                            rules: [\n                                {required: true, message: '冻结积分必须输入'}\n                            ]\n                        })(\n                            <InputNumber placeholder=\"请输入冻结积分\"\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(FreezeForm);\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqIntegrals, reqRechargeIntegral, reqFreezeIntegral, reqUpdateIntegral} from \"../../api\";\nimport UpdateForm from \"../integral/update-form\";\nimport RechargeForm from \"../integral/recharge-form\";\nimport FreezeForm from \"../integral/freeze-form\";\n\nexport default class Integral extends Component {\n\n    state = {\n        loading: false,\n        integrals: [],\n        total: 0,\n        loginName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1充值 2冻结 3修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '用户名',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '姓名',\n                dataIndex: 'realName',\n            },\n            {\n                title: '可用积分',\n                dataIndex: 'availableIntegral',\n            },\n            {\n                title: '冻结积分',\n                dataIndex: 'freezeIntegral',\n            },\n            {\n                title: '总积分',\n                dataIndex: 'totalIntegral',\n            },\n            {\n                title: '折扣比例',\n                dataIndex: 'rebateScale',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (integral) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showRechargeModal(integral)}>充值</LinkButton>\n                        <LinkButton onClick={() => this.showFreezeModal(integral)}>冻结</LinkButton>\n                        <LinkButton onClick={() => this.showUpdateModal(integral)}>折扣</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    /*查询*/\n    getIntegrals = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqIntegrals(pageNum, this.state.pageSize, this.state.loginName);\n        const {list, total} = result.data;\n        this.setState({total, integrals: list, loading: false});\n    };\n\n    showRechargeModal = (integral) => {\n        this.integral = integral;\n        this.setState({\n            showStatus: 1\n        })\n    };\n\n    showFreezeModal = (integral) => {\n        this.integral = integral;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (integral) => {\n        this.integral = integral;\n        this.setState({\n            showStatus: 3\n        })\n    };\n\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.rechargeForm) {\n            this.rechargeForm.resetFields();\n        }\n        if (this.freezeForm) {\n            this.freezeForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*充值*/\n    rechargeIntegral = () => {\n        this.rechargeForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {rechargeValue} = values;\n                this.rechargeForm.resetFields();/*清除输入数据*/\n                const id = this.integral.id;\n                const result = await reqRechargeIntegral({id, rechargeValue});\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '充值成功',\n                    });\n                }\n                this.getIntegrals();\n            }\n        });\n    };\n    /*冻结*/\n    freezeIntegral = () => {\n        this.freezeForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {freezeValue} = values;\n                const id = this.integral.id;\n                this.freezeForm.resetFields();/*清除输入数据*/\n                const result = await reqFreezeIntegral({freezeValue, id});\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '冻结成功',\n                    });\n                }\n                this.getIntegrals();\n            }\n        });\n    };\n    /*更新*/\n    updateIntegral = () => {\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {rebateScale} = values;\n                const id = this.integral.id;\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateIntegral({id, rebateScale});\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getIntegrals();\n            }\n        });\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getIntegrals(1);\n    }\n\n    render() {\n        const {integrals, loading, total, showStatus, loginName, pageNum, pageSize} = this.state;\n        const integral = this.integral;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='用户名'>\n                            <Input value={loginName}\n                                   onChange={event => this.setState({loginName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getIntegrals(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'/>\n                <Table rowKey='id' dataSource={integrals} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getIntegrals(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"充值\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.rechargeIntegral}\n                    onCancel={this.handleCancel}>\n                    <RechargeForm integral={integral} setForm={(form) => {\n                        this.rechargeForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"冻结\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.freezeIntegral}\n                    onCancel={this.handleCancel}>\n                    <FreezeForm integral={integral} setForm={(form) => {\n                        this.freezeForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改折扣比例\"\n                    visible={showStatus === 3}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateIntegral}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm integral={integral} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Form, Input, InputNumber} from 'antd';\nimport PropTypes from \"prop-types\";\n\nconst Item = Form.Item;\n\nclass MarketSaveForm extends Component {\n    static propTypes = {\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout} >\n                <Item label=\"关键词名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"keywordName\", {\n                            initialValue: '',\n                            rules: [\n                                {required: true, message: '关键词名必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入关键词名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"参考价格\">\n                    {\n                        getFieldDecorator(\"proposedPrice\", {\n                            initialValue: 0,\n                            rules: [\n                                {required: true, message: '参考价格必须输入'}\n                            ]\n                        })(\n                            <InputNumber placeholder=\"参考价格\"\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(MarketSaveForm);\n","import React, {Component} from 'react';\nimport {Form, Input, InputNumber} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass UpdateForm extends Component {\n\n    static propTypes = {\n        keyword: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {keyword} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"关键词名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"keywordName\", {\n                            initialValue: keyword.keywordName,\n                            rules: [\n                                {required: true, message: '关键词名必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入关键词名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"参考价格\">\n                    {\n                        getFieldDecorator(\"proposedPrice\", {\n                            initialValue: keyword.proposedPrice,\n                            rules: [\n                                {required: true, message: '参考价格必须输入'}\n                            ]\n                        })(\n                            <InputNumber placeholder=\"参考价格\"\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UpdateForm);\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqKeywords, reqSaveKeyword, reqUpdateKeyword, reqDeleteKeyword} from \"../../api\";\nimport SaveForm from \"../keyword/market-save-form\";\nimport UpdateForm from \"../keyword/market-update-form\";\n\nexport default class Market extends Component {\n\n    state = {\n        loading: false,\n        keywords: [],\n        total: 0,\n        keywordName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1显示新增 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '关键词',\n                dataIndex: 'keywordName',\n            },\n            {\n                title: '参考价格',\n                dataIndex: 'proposedPrice',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createdAt',\n            },\n            {\n                title: '创建人',\n                dataIndex: 'createdBy',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (keyword) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(keyword)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.delete(keyword.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    delete = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteKeyword(id);\n                this.getKeywords();\n            },\n        });\n    };\n    /*查询*/\n    getKeywords = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqKeywords(pageNum, this.state.pageSize, this.state.keywordName);\n        const {list, total} = result.data;\n        this.setState({total, keywords: list, loading: false});\n    };\n    /*显示添加框*/\n    showSaveModal = () => {\n        this.setState({\n            showStatus: 1\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (keyword) => {\n        this.keyword = keyword;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*添加*/\n    save = () => {\n        /*表单验证*/\n        this.saveForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const result = await reqSaveKeyword(values);\n                this.saveForm.resetFields();/*清除输入数据*/\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '新增成功',\n                    });\n                    this.getKeywords();\n                }\n            }\n\n        });\n\n    };\n    update = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {keywordName, proposedPrice} = values;\n                const id = this.keyword.id;\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateKeyword({id, proposedPrice, keywordName});\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getKeywords();\n            }\n        });\n\n\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getKeywords(1);\n    }\n\n    render() {\n        const {keywords, loading, total, showStatus, keywordName, pageNum, pageSize} = this.state;\n        const keyword = this.keyword;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='关键词'>\n                            <Input value={keywordName}\n                                   onChange={event => this.setState({keywordName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getKeywords(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'><Button type='primary' onClick={this.showSaveModal}>新增</Button></div>\n                <Table rowKey='id' dataSource={keywords} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getKeywords(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"新增关键词\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.save}\n                    onCancel={this.handleCancel}>\n                    <SaveForm setForm={(form) => {\n                        this.saveForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改关键词\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.update}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm keyword={keyword} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Input, Table} from \"antd\";\nimport {reqKeywordsRank} from \"../../api\";\n\nexport default class Rank extends Component {\n\n    state = {\n        loading: false,\n        keywords: [],\n        total: 0,\n        keywordName: '',\n        pageNum: 1,\n        pageSize: 10,\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '关键词',\n                dataIndex: 'keywordName',\n            },\n            {\n                title: '搜索引擎',\n                dataIndex: 'engineName',\n            },\n            {\n                title: '站点',\n                dataIndex: 'siteName',\n            },\n            {\n                title: '用户',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '排名',\n                dataIndex: 'rank',\n            },\n            {\n                title: '排名时间',\n                dataIndex: 'rankTime',\n            }\n        ];\n    };\n\n    /*查询*/\n    getkeywords = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqKeywordsRank(pageNum, this.state.pageSize, this.state.keywordName);\n        const {list, total} = result.data;\n        this.setState({total, keywords: list, loading: false});\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getkeywords(1);\n    }\n\n    render() {\n        const {keywords, loading, total, keywordName, pageNum, pageSize} = this.state;\n        return (\n            <div  style={{padding:'20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='关键词'>\n                            <Input value={keywordName}\n                                   onChange={event => this.setState({keywordName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getkeywords(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'/>\n                <Table rowKey='id' dataSource={keywords} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getkeywords(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Form, Input, InputNumber, Select} from 'antd';\nimport PropTypes from \"prop-types\";\nimport {reqUserKeywordsList, reqSitesList} from \"../../api\";\n\nconst Item = Form.Item;\nconst {Option} = Select;\n\nclass UserKeywordSaveForm extends Component {\n    static propTypes = {\n        setForm: PropTypes.func,\n    };\n\n    state = {\n        keywords: [],\n        sites: [],\n    };\n    /*关键词下拉*/\n    getKeywordsList = async () => {\n        const result = await reqUserKeywordsList();\n        const {data} = result;\n        this.setState({keywords: data});\n    };\n    /*站点下拉*/\n    getSitesList = async () => {\n        const result = await reqSitesList();\n        const {data} = result;\n        this.setState({sites: data});\n    };\n\n    componentWillMount() {\n        this.props.setForm(this.props.form);\n        this.getKeywordsList();\n        this.getSitesList();\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const keywordOptions = this.state.keywords.map(d => <Option key={d.id}>{d.keywordName}({d.proposedPrice})</Option>);\n        const siteOptions = this.state.sites.map(d => <Option key={d.id}>{d.siteName}</Option>);\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout} >\n                <Item label=\"关键词\" required=\"true\">\n                    {\n                        getFieldDecorator(\"pr\", {\n                            initialValue: '',\n                            rules: [\n                                {required: true, message: '关键词必须输入'}\n                            ]\n                        })(\n                            <Select\n                                showSearch\n                                style={{width: 200}}\n                                placeholder=\"选择一个关键词\"\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                {keywordOptions}\n                            </Select>\n                        )\n                    }\n                </Item>\n                <Item label=\"价格\">\n                    {\n                        getFieldDecorator(\"price\", {\n                            initialValue: '',\n                        })(\n                            <InputNumber placeholder=\"价格\" style={{ width: 200 }}\n                                         formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                                         precision={2} min={0}/>\n                        )\n                    }\n                </Item>\n                <Item label=\"站点\" required=\"true\">\n                    {\n                        getFieldDecorator(\"siteId\", {\n                            initialValue: '',\n                            rules: [\n                                {required: true, message: '关键词必须输入'}\n                            ]\n                        })(\n                            <Select\n                                showSearch\n                                style={{width: 200}}\n                                placeholder=\"选择一个关键词\"\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                {siteOptions}\n                            </Select>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UserKeywordSaveForm);\n","import React, {Component} from 'react';\nimport {Form, Input} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass UpdateForm extends Component {\n\n    static propTypes = {\n        site: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {site} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"站点名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"siteName\", {\n                            initialValue: site.siteName,\n                            rules: [\n                                {required: true, message: '站点名必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入站点名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"PR值\">\n                    {\n                        getFieldDecorator(\"pr\", {\n                            initialValue: site.pr\n                        })(\n                            <Input placeholder=\"请输入PR值\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"域名\">\n                    {\n                        getFieldDecorator(\"domain\", {\n                            initialValue: site.domain\n                        })(\n                            <Input placeholder=\"请输入域名\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"后台地址\">\n                    {\n                        getFieldDecorator(\"backgroundAddress\", {\n                            initialValue: site.backgroundAddress\n                        })(\n                            <Input placeholder=\"请输入后台地址\"/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UpdateForm);\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqDeleteKeyword, reqSaveKeyword, reqUserKeywords, reqUpdateKeyword} from \"../../api\";\nimport SaveForm from \"./user-save-form\";\nimport UpdateForm from \"./user-update-form\";\n\nexport default class User extends Component {\n\n    state = {\n        loading: false,\n        userKeywords: [],\n        total: 0,\n        keywordName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1显示新增 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '关键词',\n                dataIndex: 'keywordName',\n            },\n            {\n                title: '价格',\n                dataIndex: 'price',\n            },\n            {\n                title: '状态',\n                dataIndex: 'keywordStatus',\n            },\n            {\n                title: '优先级',\n                dataIndex: 'priority',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '姓名',\n                dataIndex: 'realName',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createdAt',\n            },\n            {\n                title: '创建人',\n                dataIndex: 'createdBy',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (keyword) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(keyword)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.deleteKeyword(keyword.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    deleteKeyword = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteKeyword(id);\n                this.getUserKeywords();\n            },\n        });\n    };\n    /*查询*/\n    getUserKeywords = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqUserKeywords(pageNum, this.state.pageSize, this.state.keywordName);\n        const {list, total} = result.data;\n        this.setState({total, userKeywords: list, loading: false});\n    };\n    /*显示添加框*/\n    showSaveModal = () => {\n        this.setState({\n            showStatus: 1\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (keyword) => {\n        this.keyword = keyword;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*添加*/\n    saveKeyword = () => {\n        /*表单验证*/\n        this.saveForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const result = await reqSaveKeyword(values);\n                this.saveForm.resetFields();/*清除输入数据*/\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '新增成功',\n                    });\n                    this.getUserKeywords();\n                }\n            }\n\n        });\n\n    };\n    /*更新*/\n    updateKeyword = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {keywordName, pr, domain, backgroundAddress} = values;\n                if (keywordName) {\n                    this.keyword.keywordName = keywordName;\n                }\n                if (pr) {\n                    this.keyword.pr = pr;\n                }\n                if (domain) {\n                    this.keyword.domain = domain;\n                }\n                if (backgroundAddress) {\n                    this.keyword.backgroundAddress = backgroundAddress;\n                }\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateKeyword(this.keyword);\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getUserKeywords();\n            }\n        });\n\n\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getUserKeywords(1);\n    }\n\n    render() {\n        const {userKeywords, loading, total, showStatus, keywordName, pageNum, pageSize} = this.state;\n        const keyword = this.keyword;\n        return (\n            <div  style={{padding:'20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='关键词'>\n                            <Input value={keywordName}\n                                   onChange={event => this.setState({keywordName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getUserKeywords(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'><Button type='primary' onClick={this.showSaveModal}>新增</Button></div>\n                <Table rowKey='id' dataSource={userKeywords} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getUserKeywords(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"新增\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.saveKeyword}\n                    onCancel={this.handleCancel}>\n                    <SaveForm setForm={(form) => {\n                        this.saveForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateKeyword}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm keyword={keyword} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqDeleteSite, reqSaveSite, reqSites, reqUpdateSite} from \"../../api\";\nimport SaveForm from \"../site/save-form\";\nimport UpdateForm from \"../site/update-form\";\n\nexport default class Log extends Component {\n\n    state = {\n        loading: false,\n        sites: [],\n        total: 0,\n        siteName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1显示新增 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '站点名',\n                dataIndex: 'siteName',\n            },\n            {\n                title: '站点标识',\n                dataIndex: 'siteMark',\n            },\n            {\n                title: 'PR值',\n                dataIndex: 'pr',\n            },\n            {\n                title: '域名',\n                dataIndex: 'domain',\n            },\n            {\n                title: '后台地址',\n                dataIndex: 'backgroundAddress',\n            },\n            {\n                title: '用户名称',\n                dataIndex: 'userId',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (site) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(site)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.deleteSite(site.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    deleteSite = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteSite(id);\n                this.getSites();\n            },\n        });\n    };\n    /*站点查询*/\n    getSites = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqSites(pageNum, this.state.pageSize, this.state.siteName);\n        const {list, total} = result.data;\n        this.setState({total, sites: list, loading: false});\n    };\n    /*显示添加框*/\n    showSaveModal = () => {\n        this.setState({\n            showStatus: 1\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (site) => {\n        this.site = site;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*添加站点*/\n    saveSite = () => {\n        /*表单验证*/\n        this.saveForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const result = await reqSaveSite(values);\n                this.saveForm.resetFields();/*清除输入数据*/\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '新增成功',\n                    });\n                    this.getSites();\n                }\n            }\n\n        });\n\n    };\n    /*更新站点*/\n    updateSite = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {siteName, pr, domain, backgroundAddress} = values;\n                if (siteName) {\n                    this.site.siteName = siteName;\n                }\n                if (pr) {\n                    this.site.pr = pr;\n                }\n                if (domain) {\n                    this.site.domain = domain;\n                }\n                if (backgroundAddress) {\n                    this.site.backgroundAddress = backgroundAddress;\n                }\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateSite(this.site);\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getSites();\n            }\n        });\n\n\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getSites(1);\n    }\n\n    render() {\n        const {sites, loading, total, showStatus, siteName, pageNum, pageSize} = this.state;\n        const site = this.site;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='站点名称'>\n                            <Input value={siteName} onChange={event => this.setState({siteName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getSites(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'><Button type='primary' onClick={this.showSaveModal}>新增</Button></div>\n                <Table rowKey='id' dataSource={sites} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getSites(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"新增站点\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.saveSite}\n                    onCancel={this.handleCancel}>\n                    <SaveForm setForm={(form) => {\n                        this.saveForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改站点\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateSite}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm site={site} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\n\nexport default class Permission extends Component {\n    render() {\n        return (\n            <div>\n                permission\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Button, Form, Input, Table} from \"antd\";\nimport {reqConsumeRecords} from \"../../api\";\n\nexport default class Consume extends Component {\n\n    state = {\n        loading: false,\n        rechargeRecords: [],\n        total: 0,\n        loginName: '',\n        pageNum: 1,\n        pageSize: 10,\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '用户',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '关键词',\n                dataIndex: 'keywordName',\n            },\n            {\n                title: '消费积分',\n                dataIndex: 'consumeIntegral',\n            },\n            {\n                title: '时间',\n                dataIndex: 'createdAt',\n            }\n        ];\n    };\n\n    /*查询*/\n    getRechargeRecords = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqConsumeRecords(pageNum, this.state.pageSize, this.state.loginName);\n        const {list, total} = result.data;\n        this.setState({total, rechargeRecords: list, loading: false});\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getRechargeRecords(1);\n    }\n\n    render() {\n        const {rechargeRecords, loading, total, loginName, pageNum, pageSize} = this.state;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='关键词'>\n                            <Input value={loginName}\n                                   onChange={event => this.setState({loginName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getRechargeRecords(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'/>\n                <Table rowKey='id' dataSource={rechargeRecords} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getRechargeRecords(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Button, Form, Input, Table} from \"antd\";\nimport {reqRechargeRecords} from \"../../api\";\n\nexport default class Recharge extends Component {\n\n    state = {\n        loading: false,\n        rechargeRecords: [],\n        total: 0,\n        loginName: '',\n        pageNum: 1,\n        pageSize: 10,\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '充值用户',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '充值积分',\n                dataIndex: 'rechargeAmount',\n            },\n            {\n                title: '充值时间',\n                dataIndex: 'rechargeTime',\n            }\n        ];\n    };\n\n    /*查询*/\n    getRechargeRecords = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqRechargeRecords(pageNum, this.state.pageSize, this.state.loginName);\n        const {list, total} = result.data;\n        this.setState({total, rechargeRecords: list, loading: false});\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getRechargeRecords(1);\n    }\n\n    render() {\n        const {rechargeRecords, loading, total, loginName, pageNum, pageSize} = this.state;\n        return (\n            <div style={{padding:'20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='用户名'>\n                            <Input value={loginName} onChange={event => this.setState({loginName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getRechargeRecords(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'/>\n                <Table rowKey='id' dataSource={rechargeRecords} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getRechargeRecords(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './site.less'\nimport {Button, Modal, Table, notification, Form, Input} from \"antd\";\nimport SaveForm from \"./save-form\";\nimport UpdateForm from \"./update-form\";\nimport LinkButton from \"../../components/link-button\";\nimport {reqDeleteSite, reqSaveSite, reqSites, reqUpdateSite} from \"../../api\";\n\n\nexport default class Site extends Component {\n    state = {\n        loading: false,\n        sites: [],\n        total: 0,\n        siteName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 1显示新增 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '站点名',\n                dataIndex: 'siteName',\n            },\n            {\n                title: '站点标识',\n                dataIndex: 'siteMark',\n            },\n            {\n                title: 'PR值',\n                dataIndex: 'pr',\n            },\n            {\n                title: '域名',\n                dataIndex: 'domain',\n            },\n            {\n                title: '后台地址',\n                dataIndex: 'backgroundAddress',\n            },\n            {\n                title: '用户名称',\n                dataIndex: 'realName',\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'modifyAt',\n            },\n            {\n                title: '修改人',\n                dataIndex: 'modifyBy',\n            },\n            {\n                title: '操作',\n                render: (site) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(site)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.deleteSite(site.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    deleteSite = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteSite(id);\n                this.getSites();\n            },\n        });\n    };\n    /*站点查询*/\n    getSites = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqSites(pageNum, this.state.pageSize, this.state.siteName);\n        const {list, total} = result.data;\n        this.setState({total, sites: list, loading: false});\n    };\n    /*显示添加框*/\n    showSaveModal = () => {\n        this.setState({\n            showStatus: 1\n        })\n    };\n    /*显示修改框*/\n    showUpdateModal = (site) => {\n        this.site = site;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*添加站点*/\n    saveSite = () => {\n        /*表单验证*/\n        this.saveForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const result = await reqSaveSite(values);\n                this.saveForm.resetFields();/*清除输入数据*/\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '新增成功',\n                    });\n                    this.getSites();\n                }\n            }\n\n        });\n\n    };\n    /*更新站点*/\n    updateSite = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {siteName, pr, domain, backgroundAddress} = values;\n                if (siteName) {\n                    this.site.siteName = siteName;\n                }\n                if (pr) {\n                    this.site.pr = pr;\n                }\n                if (domain) {\n                    this.site.domain = domain;\n                }\n                if (backgroundAddress) {\n                    this.site.backgroundAddress = backgroundAddress;\n                }\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateSite(this.site);\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getSites();\n            }\n        });\n\n\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getSites(1);\n    }\n\n    render() {\n        const {sites, loading, total, showStatus, siteName, pageNum, pageSize} = this.state;\n        const site = this.site;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='站点名称'>\n                            <Input value={siteName} onChange={event => this.setState({siteName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getSites(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'><Button type='primary' onClick={this.showSaveModal}>新增</Button></div>\n                <Table rowKey='id' dataSource={sites} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getSites(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"新增站点\"\n                    visible={showStatus === 1}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.saveSite}\n                    onCancel={this.handleCancel}>\n                    <SaveForm setForm={(form) => {\n                        this.saveForm = form\n                    }}/>\n                </Modal>\n                <Modal\n                    title=\"修改站点\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateSite}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm site={site} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Form, Input} from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Item = Form.Item;\n\nclass UpdateForm extends Component {\n\n    static propTypes = {\n        user: PropTypes.object,\n        setForm: PropTypes.func,\n    };\n\n    componentWillMount() {\n        /*将form对象通过setForm传递给父组件*/\n        this.props.setForm(this.props.form);\n    }\n\n    render() {\n        const {user} = this.props;\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 18},\n            },\n        };\n        return (\n            <Form  {...formItemLayout}>\n                <Item label=\"用户名\" required=\"true\">\n                    {\n                        getFieldDecorator(\"loginName\", {\n                            initialValue: user.loginName,\n                            rules: [\n                                {required: true, message: '站点名必须输入'}\n                            ]\n                        })(\n                            <Input disabled=\"true\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"姓名\">\n                    {\n                        getFieldDecorator(\"realName\", {\n                            initialValue: user.realName\n                        })(\n                            <Input placeholder=\"请输入姓名\" />\n                        )\n                    }\n                </Item>\n                <Item label=\"手机号\" required=\"true\">\n                    {\n                        getFieldDecorator(\"mobilePhone\", {\n                            initialValue: user.mobilePhone,\n                            rules: [\n                                {required: true, message: '手机号必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"请输入手机号\"/>\n                        )\n                    }\n                </Item>\n                <Item label=\"邮箱\">\n                    {\n                        getFieldDecorator(\"email\", {\n                            initialValue: user.email\n                        })(\n                            <Input placeholder=\"请输入邮箱\"/>\n                        )\n                    }\n                </Item>\n\n\n                <Item label=\"公司名称\">\n                    {\n                        getFieldDecorator(\"companyName\", {\n                            initialValue: user.companyName\n                        })(\n                            <Input placeholder=\"请输入公司名称\"/>\n                        )\n                    }\n                </Item>\n\n                <Item label=\"备注\">\n                    {\n                        getFieldDecorator(\"description\", {\n                            initialValue: user.description\n                        })(\n                            <Input placeholder=\"请输入备注\"/>\n                        )\n                    }\n                </Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(UpdateForm);\n","import React, {Component} from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport {Button, Form, Input, Modal, notification, Table} from \"antd\";\nimport {reqDeleteUser, reqUsers, reqUpdateUser} from \"../../api\";\nimport UpdateForm from \"../user/update-form\";\n\nexport default class User extends Component {\n    state = {\n        loading: false,\n        users: [],\n        total: 0,\n        userName: '',\n        pageNum: 1,\n        pageSize: 10,\n        showStatus: 0,/*标识添加更新确认框是否显示 0隐藏 2显示修改*/\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '用户名',\n                dataIndex: 'loginName',\n            },\n            {\n                title: '姓名',\n                dataIndex: 'realName',\n            },\n            {\n                title: '电话',\n                dataIndex: 'mobilePhone',\n            },\n            {\n                title: '邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '公司名称',\n                dataIndex: 'companyName',\n            },\n            {\n                title: '角色',\n                dataIndex: 'roleName',\n            },\n            {\n                title: '备注',\n                dataIndex: 'description',\n            },\n            {\n                title: '创建人',\n                dataIndex: 'createdBy',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createdAt',\n            },\n            {\n                title: '操作',\n                render: (user) => (/**如何向事件回调函数传递参数，先定义一个匿名函数，在函数调用处理的函数并传入数据**/\n                    <span>\n                        <LinkButton onClick={() => this.showUpdateModal(user)}>修改</LinkButton>\n                        <LinkButton onClick={() => this.deleteUser(user.id)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ];\n    };\n\n    deleteUser = (id) => {\n        Modal.confirm({\n            title: '确认删除?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                reqDeleteUser(id);\n                this.getUsers();\n            },\n        });\n    };\n    /*查询*/\n    getUsers = async (pageNum) => {\n        this.setState({loading: true});\n        const result = await reqUsers(pageNum, this.state.pageSize, this.state.userName);\n        const {list, total} = result.data;\n        this.setState({total, users: list, loading: false});\n    };\n    /*显示修改框*/\n    showUpdateModal = (user) => {\n        this.user = user;\n        this.setState({\n            showStatus: 2\n        })\n    };\n    /*点击取消，隐藏确认框*/\n    handleCancel = () => {\n        if (this.updateForm) {\n            this.updateForm.resetFields();\n        }\n        if (this.saveForm) {\n            this.saveForm.resetFields();\n        }\n        this.setState({\n            showStatus: 0\n        })\n    };\n    /*更新*/\n    updateUser = () => {\n        /*表单验证*/\n        this.updateForm.validateFields(async (error, values) => {\n            if (!error) {\n                this.setState({\n                    showStatus: 0\n                });\n                const {realName, mobilePhone, email, companyName, description} = values;\n                if (realName) {\n                    this.user.realName = realName;\n                }\n                if (mobilePhone) {\n                    this.user.mobilePhone = mobilePhone;\n                }\n                if (email) {\n                    this.user.email = email;\n                }\n                if (companyName) {\n                    this.user.companyName = companyName;\n                }\n                if (description) {\n                    this.user.description = description;\n                }\n                this.updateForm.resetFields();/*清除输入数据*/\n                const result = await reqUpdateUser(this.user);\n                if (result.code === 0) {\n                    notification['success']({\n                        message: '修改成功',\n                    });\n                }\n                this.getUsers();\n            }\n        });\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getUsers(1);\n    }\n\n    render() {\n        const {users, loading, total, showStatus, userName, pageNum, pageSize} = this.state;\n        const user = this.user;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='content-search'>\n                    <Form layout=\"inline\">\n                        <Form.Item label='用户名'>\n                            <Input value={userName}\n                                   onChange={event => this.setState({userName: event.target.value})}/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type='primary' onClick={() => {\n                                this.getUsers(1);\n                                this.setState({pageNum: 1})\n                            }}>查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='add-button'/>\n                <Table rowKey='id' dataSource={users} columns={this.columns} loading={loading}\n                       pagination={{\n                           defaultCurrent: 1,\n                           current: pageNum,\n                           defaultPageSize: pageSize,\n                           total: total,\n                           onChange: (value) => {\n                               this.getUsers(value);\n                               this.setState({pageNum: value})\n                           }\n                       }}/>\n                <Modal\n                    title=\"修改用户信息\"\n                    visible={showStatus === 2}\n                    okText='确定'\n                    cancelText='取消'\n                    onOk={this.updateUser}\n                    onCancel={this.handleCancel}>\n                    <UpdateForm user={user} setForm={(form) => {\n                        this.updateForm = form\n                    }}/>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Table} from \"antd\";\nimport {reqRoles} from \"../../api\";\n\nexport default class Role extends Component {\n    state = {\n        loading: false,\n        roles: [],\n    };\n\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '角色名',\n                dataIndex: 'roleName',\n            },\n            {\n                title: '角色标识',\n                dataIndex: 'roleMark',\n            },\n            {\n                title: '创建人',\n                dataIndex: 'createdBy',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createdAt',\n            }\n        ];\n    };\n\n    /*查询*/\n    getRoles = async () => {\n        this.setState({loading: true});\n        const result = await reqRoles();\n        this.setState({roles: result.data, loading: false});\n    };\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getRoles();\n    }\n\n    render() {\n        const {roles, loading} = this.state;\n        return (\n            <div style={{padding: '20px 20px 0'}}>\n                <div className='add-button'></div>\n                <Table rowKey='id' dataSource={roles} columns={this.columns} loading={loading}\n                       pagination={{\n                           hideOnSinglePage: true\n                       }}/>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\nimport './404.less'\n\nexport default class NotFound extends Component {\n    goHome = () => {\n        this.props.history.replace('/home')\n    }\n\n    render() {\n        return (\n            <Row className='not-found'>\n                <Col span={12} className='left'/>\n                <Col span={12} className='right'>\n                    <h1>404</h1>\n                    <h2>抱歉，你访问的页面不存在</h2>\n                    <div>\n                        <Button type='primary' onClick={this.goHome}>\n                            回到首页\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\n","/*\n后台管理主路由组件\n*/\nimport React, {Component} from 'react';\nimport {Layout} from 'antd';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {connect} from \"react-redux\";\nimport Header from '../../components/header';\nimport LeftNav from '../../components/left-nav';\nimport Alarm from '../alarm/alarm';\nimport Home from '../home/home';\nimport Integral from '../integral/integral';\nimport KeywordMarket from '../keyword/market';\nimport KeywordRank from '../keyword/rank';\nimport KeywordUser from '../keyword/user';\nimport Log from '../log/log';\nimport Permission from '../permission/permission';\nimport RecordConsume from '../record/consume';\nimport RecordRecharge from '../record/recharge';\nimport Site from '../site/site';\nimport User from '../user/user';\nimport Role from '../role/role';\nimport NotFound from '../404/404';\n\nconst {Footer, Sider, Content} = Layout;\n\nclass Admin extends Component {\n    render() {\n        const user = this.props.user;\n        if (!user || !user.name) {\n            return <Redirect to='/login'/>;\n        }\n        return (\n            <Layout style={{minHeight: '100%'}}>\n                <Sider width='210px' style={{boxShadow: 'rgba(0, 21, 41, 0.35) 2px 0px 6px'}}>\n                    <LeftNav/>\n                </Sider>\n                <Layout>\n                    <Header/>\n                    <Content style={{margin: '20px 20px 0', backgroundColor: '#fff'}}>\n                        <Switch>\n                            <Redirect from='/' to='/home' exact/>\n                            <Route path='/home' component={Home}/>\n                            <Route path='/alarm' component={Alarm}/>\n                            <Route path='/integral' component={Integral}/>\n                            <Route path='/keyword/market' component={KeywordMarket}/>\n                            <Route path='/keyword/rank' component={KeywordRank}/>\n                            <Route path='/keyword/user' component={KeywordUser}/>\n                            <Route path='/keyword' component={KeywordMarket}/>\n                            <Route path='/log' component={Log}/>\n                            <Route path='/permission' component={Permission}/>\n                            <Route path='/record/recharge' component={RecordRecharge}/>\n                            <Route path='/record/consume' component={RecordConsume}/>\n                            <Route path='/record' component={RecordConsume}/>\n                            <Route path='/site' component={Site}/>\n                            <Route path='/user' component={User}/>\n                            <Route path='/role' component={Role}/>\n                            <Route component={NotFound}/>\n\n                        </Switch>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>Copyright\n                        © 2019 上海皓逗网络科技有限公司出品</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user})\n)(Admin)\n\n","import React, {Component} from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport Login from './pages/login/login';\nimport Logout from './pages/login/logout';\nimport Register from './pages/login/register';\nimport Admin from './pages/admin/admin';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path='/login' component={Login}/>\n                    <Route path='/logout' component={Logout}/>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/' component={Admin}/>\n                </Switch>\n            </HashRouter>\n        )\n    }\n}\n","import {combineReducers} from 'redux'\nimport {RECEIVE_USER, RESET_USER, REGISTER_USER, RESET_REGISTER_USER} from '../constant'\nimport storageUtils from \"../utils/storageUtils\";\n\nconst initUser = storageUtils.getUser();\n\nfunction user(state = initUser, action) {\n    switch (action.type) {\n        case RECEIVE_USER:\n            return action.user\n        case RESET_USER:\n            return {}\n        default:\n            return state\n    }\n}\n\nfunction registerUser(state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return action.user\n        case RESET_REGISTER_USER:\n            return null\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    user, registerUser,\n})\n","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport reducer from '../reducer'\n\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store'\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}